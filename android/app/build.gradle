plugins {
    alias libs.plugins.androidApplication
    alias libs.plugins.kotlinAndroid
}

Properties properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile != null && localPropertiesFile.exists()) {
    InputStream inputStream = localPropertiesFile.newDataInputStream();
    properties.load(inputStream)
}
def screenOrientation = properties.getOrDefault("screenOrientation", "sensorPortrait")

android {
    namespace 'seker.logger.android'

    compileSdkVersion libs.versions.android.compileSdk.get().toInteger()

    defaultConfig {
        minSdkVersion libs.versions.android.minSdk.get().toInteger()
        targetSdkVersion libs.versions.android.targetSdk.get().toInteger()

        versionCode 1
        versionName "1.0.0"

        applicationId "seker.logger.android"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            manifestPlaceholders = [screenOrientation:"$screenOrientation"]
        }
        release {
            manifestPlaceholders = [screenOrientation:"$screenOrientation"]
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    kotlin {
        compilerOptions {
            freeCompilerArgs.add("-Xjvm-default=all")
        }
    }
}

dependencies {
    implementation project(':logger')

    implementation libs.google.material

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel

    testImplementation libs.junit
    androidTestImplementation libs.androidx.testExt.junit
    androidTestImplementation libs.androidx.espresso.core
}